<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ~ Licensed to Marvelution under one or more contributor license 
 ~ agreements.  See the NOTICE file distributed with this work 
 ~ for additional information regarding copyright ownership.
 ~ Marvelution licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~  http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied. See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<Module>
	<ModulePrefs title="__MSG_hudson.gadget.status.title__" directory_title="__MSG_hudson.gadget.status.title__"
				 description="__MSG_hudson.gadget.status.description__"
				 author="Mark Rekveld" author_affiliation="Marvelution"
				 author_location="Beverwijk, The Netherlands" title_url="http://www.marvelution.com/" height="100">
		<Optional feature="gadget-directory">
			<Param name="categories">
				JIRA
				Other
			</Param>
		</Optional>
        <Require feature="setprefs"/>
        <Require feature="settitle"/>
        <Require feature="dynamic-height"/>
        <Require feature="views" />
        <Optional feature="atlassian.util" />
        <Require feature="oauthpopup"/>
		#oauth
		#supportedLocales("gadget.common,hudson.gadget,hudson.error")
	</ModulePrefs>
	<UserPref name="serverId" datatype="hidden" default_value="1" />
	<UserPref name="refresh" datatype="hidden" default_value="false" />
	<UserPref name="isConfigured" datatype="hidden" default_value="false" />
	<Content type="html">
		<![CDATA[
		#requireResource("${atlassian.jira.plugin.key}:status-gadget")
        #includeResources()
		<script type="text/javascript">
		gadgets.window.setTitle("__MSG_hudson.gadget.status.title__");
		(function () {
			AJS.Gadget({
				baseUrl: "__ATLASSIAN_BASE_URL__",
				useOauth: "/rest/gadget/1.0/currentUser",
				config: {
					descriptor: function (args) {
						var gadget = this;
						gadgets.window.setTitle("__MSG_hudson.gadget.status.title__");
						return  {
							action: "/rest/hudson/1.0/hudsonStatus/validate",
                            theme : function(){
                                if (gadgets.window.getViewportDimensions().width < 450) {
                                    return "gdt top-label";
                                } else {
                                    return "gdt";
                                }
                            }(),
							fields: [
								AJS.gadget.fields.hudsonServerPicker(gadget, "serverId", args.options),
								AJS.gadget.fields.nowConfigured()
							]
						};
					},
					args: function() {
						return [ {
								key: "options",
								ajaxOptions: "/rest/hudson/1.0/hudsonServers"
							}
						];
					}()
				},
				view: {
					enableReload: true,
					onResizeReload: true,
					template: function (args) {
						var gadget = this;
						gadget.getView().empty();
                        gadget.getView().attr("id", "hudson-status-content");
						var baseUrl = AJS.$.ajaxSettings.baseUrl;
						var server = args.data.server;
						if (args.data.hasErrors) {
							if (server.name !== "") {
								gadgets.window.setTitle(AJS.format("__MSG_hudson.gadget.status.server.title__", server.name));
							} else {
								gadgets.window.setTitle("__MSG_hudson.gadget.status.title__");
							}
							gadget.getView().append(generateErrorMessageBox(gadget, args.data.errors));
						} else {
							gadgets.window.setTitle(AJS.format("__MSG_hudson.gadget.status.server.title__", server.name));
							if (args.data.hasBuilds) {
								gadget.getView().append(generateStatusOverview(gadget, "", server, args.data.builds));
							} else {
								gadget.getView().append(AJS.$("<div/>").addClass("empty-results").append(
									AJS.format("__MSG_hudson.gadget.common.server.no.projects__", server.url, server.name)
								));
							}
						}
						gadget.resize();
					},
					args: [{
						key: "data",
						ajaxOptions: function () {
							var gadget = this;
							return {
								url: "/rest/hudson/1.0/hudsonStatus/generate",
								data: {
									serverId: gadget.getPref("serverId"),
									view: ""
								}
							};
						}
					}]
				}
			});
		})();
		</script>
		]]>
	</Content>
</Module>
